
        
    

    

    merge into `steadfast-task-363413`.`data_vault`.`hub_customer` as DBT_INTERNAL_DEST
        using (
          -- Generated by dbtvault.

WITH row_rank_1 AS (
    SELECT rr.`CUSTOMER_HK`, rr.`CUSTOMER_NUMBER`, rr.`LOAD_DATE`, rr.`RECORD_SOURCE`,
           ROW_NUMBER() OVER(
               PARTITION BY rr.`CUSTOMER_HK`
               ORDER BY rr.`LOAD_DATE`
           ) AS row_number
    FROM `steadfast-task-363413`.`data_vault`.`v_stg_UK_customer` AS rr
    WHERE rr.`CUSTOMER_HK` IS NOT NULL
    QUALIFY row_number = 1
),

row_rank_2 AS (
    SELECT rr.`CUSTOMER_HK`, rr.`CUSTOMER_NUMBER`, rr.`LOAD_DATE`, rr.`RECORD_SOURCE`,
           ROW_NUMBER() OVER(
               PARTITION BY rr.`CUSTOMER_HK`
               ORDER BY rr.`LOAD_DATE`
           ) AS row_number
    FROM `steadfast-task-363413`.`data_vault`.`v_stg_US_customer` AS rr
    WHERE rr.`CUSTOMER_HK` IS NOT NULL
    QUALIFY row_number = 1
),


stage_union AS (
    SELECT * FROM row_rank_1
    UNION ALL
    SELECT * FROM row_rank_2
),

    row_rank_union AS (
    SELECT ru.*,
           ROW_NUMBER() OVER(
               PARTITION BY ru.`CUSTOMER_HK`
               ORDER BY ru.`LOAD_DATE`, ru.`RECORD_SOURCE` ASC
           ) AS row_rank_number
    FROM stage_union AS ru
    WHERE ru.`CUSTOMER_HK` IS NOT NULL
    QUALIFY row_rank_number = 1
),


records_to_insert AS (
    SELECT a.`CUSTOMER_HK`, a.`CUSTOMER_NUMBER`, a.`LOAD_DATE`, a.`RECORD_SOURCE`
    FROM row_rank_union AS a
    LEFT JOIN `steadfast-task-363413`.`data_vault`.`hub_customer` AS d
    ON a.`CUSTOMER_HK` = d.`CUSTOMER_HK`
    WHERE d.`CUSTOMER_HK` IS NULL
)

SELECT * FROM records_to_insert
        ) as DBT_INTERNAL_SOURCE
        on FALSE

    

    when not matched then insert
        (`CUSTOMER_HK`, `CUSTOMER_NUMBER`, `LOAD_DATE`, `RECORD_SOURCE`)
    values
        (`CUSTOMER_HK`, `CUSTOMER_NUMBER`, `LOAD_DATE`, `RECORD_SOURCE`)


  