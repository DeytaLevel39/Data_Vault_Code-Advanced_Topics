
        
    

    

    merge into `steadfast-task-363413`.`data_vault`.`link_customer_order` as DBT_INTERNAL_DEST
        using (
          

    -- Generated by dbtvault.

    

WITH row_rank_1 AS (
    SELECT rr.`CUSTOMER_ORDER_HK`, rr.`CUSTOMER_HK`, rr.`ORDER_HK`, rr.`LOAD_DATE`, rr.`RECORD_SOURCE`,
        ROW_NUMBER() OVER(
               PARTITION BY rr.`CUSTOMER_ORDER_HK`
               ORDER BY rr.`LOAD_DATE`
        ) AS row_number
    FROM `steadfast-task-363413`.`data_vault`.`v_stg_UK_order` AS rr
    WHERE rr.`CUSTOMER_ORDER_HK` IS NOT NULL
    AND rr.`CUSTOMER_HK` IS NOT NULL
    AND rr.`ORDER_HK` IS NOT NULL
    QUALIFY row_number = 1
    ),


records_to_insert AS (
    SELECT a.`CUSTOMER_ORDER_HK`, a.`CUSTOMER_HK`, a.`ORDER_HK`, a.`LOAD_DATE`, a.`RECORD_SOURCE`
    FROM row_rank_1 AS a
    LEFT JOIN `steadfast-task-363413`.`data_vault`.`link_customer_order` AS d
    ON a.`CUSTOMER_ORDER_HK` = d.`CUSTOMER_ORDER_HK`
    WHERE d.`CUSTOMER_ORDER_HK` IS NULL
)

SELECT * FROM records_to_insert
        ) as DBT_INTERNAL_SOURCE
        on FALSE

    

    when not matched then insert
        (`CUSTOMER_ORDER_HK`, `CUSTOMER_HK`, `ORDER_HK`, `LOAD_DATE`, `RECORD_SOURCE`)
    values
        (`CUSTOMER_ORDER_HK`, `CUSTOMER_HK`, `ORDER_HK`, `LOAD_DATE`, `RECORD_SOURCE`)


  